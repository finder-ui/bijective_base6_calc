{
    "pageTitle": "单射六进制计算器与浏览器",
    "pageDescription": "一个用于计算和探索单射六进制数系的交互式教育工具，该数系没有零。具有实时转换器、参考表和练习模式。",
    "mainTitle": "单射六进制计算器与浏览器",
    "tabCalculator": "计算器",
    "tabTables": "参考表",
    "tabProsCons": "优缺点",
    "tabLearn": "学习",
    "tabPractice": "练习",
    "calculatorTitle": "单射数学计算器",
    "calculatorDesc": "输入两个单射六进制数，查看所有标准算术运算的结果。",
    "num1Placeholder": "第一个数",
    "num2Placeholder": "第二个数",
    "calculateBtn": "计算所有运算",
    "resultsTitle": "结果",
    "liveConverterTitle": "实时数系浏览器",
    "liveConverterDesc": "输入一个标准十进制数，查看其在不同数系中的实时表示。",
    "decimalInputLabel": "输入一个十进制数：",
    "decimalInputPlaceholder": "例如：43",
    "additionTableTitle": "加法表（1到24）",
    "multiplicationTableTitle": "乘法表（1到24）",
    "explanationTitle": "理解单射系统",
    "explanationDesc1": "该系统是<strong>单射六进制记数法</strong>。它是一种位置记数法，但有两个关键区别：它没有零，其数字从1到6。在<code>6</code>之后，下一个数是<code>11</code>。",
    "algoTitle": "转换算法解释",
    "algoDesc1": "从十进制转换为单射六进制的技巧是暂时移动数系。计算机自然地使用0到5的余数进行运算，但我们的数字是1到6。我们在每次计算前减1来弥合这一差距。",
    "visualizerTitle": "算法可视化工具",
    "visualizerDesc": "输入一个十进制数，查看转换算法的实际操作。",
    "visualizerInputPlaceholder": "输入十进制数以进行可视化...",
    "visualizeBtn": "可视化",
    "formalLangTitle": "魔法背后的数学：与形式语言理论的联系",
    "formalLangDesc1": "单射六进制系统与理论计算机科学的基石——形式语言理论有着深刻而美丽的联系。",
    "formalLangDesc2": "在这个领域，我们将字母表Σ定义为符号的集合。对于我们的系统，字母表是Σ = {1, 2, 3, 4, 5, 6}。",
    "formalLangDesc3": "使用该字母表可以创建的所有可能字符串的集合被称为Σ的克莱尼星（或克莱尼闭包），表示为Σ*。该集合包括任何有限长度的字符串：{空字符串, 1, 2, ..., 6, 11, 12, ..., 66, 111, ...}。",
    "formalLangDesc4": "如果我们将空字符串映射到零，单射六进制系统本质上是字母表{1, 2, 3, 4, 5, 6}的克莱尼星的一个完美、有序的枚举。每个正整数都精确地对应一个字符串，每个字符串也精确地对应一个正整数。这非常强大，因为它提供了一种无缝的方式，为来自六个选项集合的任何事件或选择序列分配一个唯一的编号，这是算法和可计算性理论中的一个基本操作。",
    "geomTitle": "几何解释：无限6叉树",
    "geomDesc1": "我们可以将整个系统可视化为一个无限的、完全的6叉树。6叉树是每个节点都恰好有六个子节点的结构。",
    "geomDesc2": "树的根可以被认为是起点（代表数字0或空字符串）。",
    "geomList": [ "第一层节点的标签为1, 2, 3, 4, 5, 6。", "这些节点中的每一个都有六个子节点。例如，节点“1”是节点“11”、“12”、“13”、“14”、“15”、“16”的父节点。" ],
    "geomDesc4": "在这个模型中，每个单射六进制数都是从根到特定节点的唯一“地址”或“路径”。例如，数字425意味着：",
    "geomPathList": [ "从根开始。", "走第4个分支。", "从该节点走第2个分支。", "从该节点走第5个分支。" ],
    "hashingTitle": "关于碰撞和哈希的说明",
    "hashingDesc": "观察乘法表可以发现<code>2 × 3 = 6</code>和<code>1 × 6 = 6</code>。这是一个<strong>碰撞</strong>。虽然在数学上很有趣，但这一特性与加密哈希函数（如SHA-256）所期望的相反，后者必须经过专门设计，以使查找碰撞在计算上不可行。因此，该系统是理解碰撞概念的好工具，但其本身并不是一个安全的哈希算法。",
    "prosTitle": "单射六进制的优点",
    "prosIntro": "该系统无零的特性提供了几个独特的优点，尤其是在计算和人类可读的标识符方面。",
    "pros": [
        { "title": "明确且对人类友好", "desc": "没有前导零意味着没有混淆。<code>123</code>永远是<code>123</code>，而不是<code>0123</code>。这对于产品代码、序列号或短链接等清晰度至关重要的场景非常理想。" },
        { "title": "紧凑高效", "desc": "每个可能的数字字符串都是一个有效的数字，这使其成为一种非常密集和高效的数据表示方式。没有浪费或无效的组合。" },
        { "title": "自然适用于计算", "desc": "数字和字符串之间的一一对应关系非常适合需要唯一标识符的算法，例如索引复杂数据结构或在分布式系统中生成唯一密钥。" },
        { "title": "消除空引用（一个理论思想）", "desc": "你问过基于这个系统构建的计算机会不会有空指针。从理论上讲，你触及了一个深刻的问题！由于没有“零”来表示“无”或未初始化的状态，每个可能的数字序列都指向一个有效、唯一的数字。这与消除空引用（编程中常见的错误来源）的思想完美契合。" },
        { "title": "用手指进行更高级的计数", "desc": "用十个手指，你可以数到远超10的数。每只手可以代表一个单射六进制数字（1-5个手指，或握拳代表6）。用两只手，你可以表示从1到42的每个数字，其中左手一个手指和右手一个手指表示7（单射11）。" }
    ],
    "consTitle": "缺点与权衡",
    "consIntro": "尽管功能强大，但由于一些关键原因，该系统并未广泛用于通用算术。",
    "cons": [
        { "title": "不熟悉的算术", "desc": "加法和减法中的进位和借位规则与十进制系统不同，这使得心算和手动计算对大多数人来说具有挑战性。" },
        { "title": "转换开销", "desc": "它不是计算机（使用二进制）或人类（使用十进制）的本机系统。在与其他系统接口时，总是需要一个转换步骤，这会增加计算开销。" },
        { "title": "有限的本机支持", "desc": "很少有编程语言或标准库具有用于单射记数法的内置函数。这意味着开发人员必须为所有算术和转换操作实现自定义逻辑。" },
        { "title": "复杂的乘法模式", "desc": "与标准基数中乘以基数只是简单地添加一个零不同，单射乘法中的模式不那么直观，使得快速估算或计算更加困难。" }
    ],
    "practiceTitle": "练习模式",
    "practiceDesc": "与时间赛跑，测试你的技能！选择一个难度并解决问题。",
    "difficultyLabel": "难度：",
    "difficultyEasy": "简单",
    "difficultyMedium": "中等",
    "difficultyHard": "困难",
    "quizQuestion": "什么是",
    "quizTypeConversion": "转换",
    "quizTypeMath": "计算",
    "quizQuestionConversionSuffix": "的单射六进制表示？",
    "quizAnswerPlaceholder": "你的答案...",
    "quizSubmitBtn": "提交",
    "quizCorrectFeedback": "正确！🎉",
    "quizIncorrectFeedback": "不完全正确！正确答案是",
    "quizNextBtn": "下一题",
    "timeLabel": "时间：",
    "githubLink": "项目源代码可在以下地址获取",
    "licenseLink": "根据以下许可证发布",
    "ui_loading": "加载中...",
    "errorBothNumbers": "请输入两个数字。",
    "errorGeneric": "错误："
}