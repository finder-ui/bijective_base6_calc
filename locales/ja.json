{
    "pageTitle": "単射基数6計算機＆エクスプローラー",
    "pageDescription": "ゼロのない数体系である単射基数6を計算し、探求するためのインタラクティブな教育ツール。ライブコンバーター、参照表、練習モードを備えています。",
    "mainTitle": "単射基数6計算機＆エクスプローラー",
    "tabCalculator": "計算機",
    "tabTables": "参照表",
    "tabProsCons": "長所と短所",
    "tabLearn": "学習",
    "tabPractice": "練習",
    "calculatorTitle": "単射数学計算機",
    "calculatorDesc": "2つの単射基数6の数を入力して、すべての標準的な算術演算の結果を表示します。",
    "num1Placeholder": "最初の数",
    "num2Placeholder": "2番目の数",
    "calculateBtn": "すべての演算を計算",
    "resultsTitle": "結果",
    "liveConverterTitle": "ライブ数体系エクスプローラー",
    "liveConverterDesc": "標準の10進数を入力すると、異なる数体系でのリアルタイム表現が表示されます。",
    "decimalInputLabel": "10進数を入力してください：",
    "decimalInputPlaceholder": "例：43",
    "additionTableTitle": "加算表（1から24）",
    "multiplicationTableTitle": "乗算表（1から24）",
    "explanationTitle": "単射システムを理解する",
    "explanationDesc1": "このシステムは<strong>単射基数6記数法</strong>です。これは位置表記法ですが、2つの重要な違いがあります：ゼロがなく、数字は1から6までです。<code>6</code>の後、次の数は<code>11</code>になります。",
    "algoTitle": "変換アルゴリズムの説明",
    "algoDesc1": "10進数から単射基数6に変換する秘訣は、一時的に数体系をシフトすることです。コンピュータは自然に0から5の剰余で動作しますが、私たちの数字は1から6です。各計算の前に1を引くことで、このギャップを埋めます。",
    "visualizerTitle": "アルゴリズムビジュアライザー",
    "visualizerDesc": "10進数を入力して、変換アルゴリズムの動作を確認します。",
    "visualizerInputPlaceholder": "視覚化する10進数を入力...",
    "visualizeBtn": "視覚化",
    "formalLangTitle": "魔法の背後にある数学：形式言語理論へのリンク",
    "formalLangDesc1": "単射基数6システムは、理論計算機科学の基礎である形式言語理論と深く美しい関連があります。",
    "formalLangDesc2": "この分野では、アルファベットΣを記号の集合として定義します。私たちのシステムでは、アルファベットはΣ = {1, 2, 3, 4, 5, 6}です。",
    "formalLangDesc3": "このアルファベットを使用して作成できるすべての可能な文字列の集合は、Σのクリーネスター（またはクリーネ閉包）として知られ、Σ*と表記されます。この集合には、任意の有限長の文字列が含まれます：{空文字列, 1, 2, ..., 6, 11, 12, ..., 66, 111, ...}。",
    "formalLangDesc4": "単射基数6システムは、空文字列をゼロにマッピングする場合、アルファベット{1, 2, 3, 4, 5, 6}のクリーネスターの完全で順序付けられた列挙です。すべての正の整数は正確に1つの文字列に対応し、すべての文字列は正確に1つの正の整数に対応します。これは、アルゴリズムと計算可能性理論における基本的な操作である、6つの選択肢のセットからのイベントや選択のシーケンスに一意の番号をシームレスに割り当てる方法を提供するため、非常に強力です。",
    "geomTitle": "幾何学的解釈：無限6分木",
    "geomDesc1": "システム全体を無限の完全な6分木として視覚化できます。6分木は、すべてのノードが正確に6つの子を持つ構造です。",
    "geomDesc2": "木の根は出発点と考えることができます（数値0または空文字列を表します）。",
    "geomList": [ "第1レベルのノードには1、2、3、4、5、6のラベルが付いています。", "これらの各ノードには6つの子があります。たとえば、ノード「1」はノード「11」、「12」、「13」、「14」、「15」、「16」の親です。" ],
    "geomDesc4": "このモデルでは、すべての単射基数6の数は、根から特定のノードへの一意の「アドレス」または「パス」です。たとえば、数425は次のことを意味します：",
    "geomPathList": [ "根から始めます。", "4番目の分岐を取ります。", "そのノードから2番目の分岐を取ります。", "そのノードから5番目の分岐を取ります。" ],
    "hashingTitle": "衝突とハッシュに関する注意",
    "hashingDesc": "乗算表を観察すると、<code>2 × 3 = 6</code>であり、<code>1 × 6 = 6</code>であることがわかります。これは<strong>衝突</strong>です。数学的には興味深いですが、この特性は、衝突を見つけることが計算上実行不可能であるように特別に設計する必要がある暗号学的ハッシュ関数（SHA-256など）で望まれるものとは逆です。したがって、このシステムは衝突の概念を理解するための良いツールですが、それ自体は安全なハッシュアルゴリズムではありません。",
    "prosTitle": "単射基数6の利点",
    "prosIntro": "このシステムのゼロレスの性質は、特にコンピューティングや人間が読める識別子において、いくつかのユニークな利点を提供します。",
    "pros": [
        { "title": "曖昧さがなく、人間に優しい", "desc": "先頭にゼロがないため、混乱が生じません。<code>123</code>は常に<code>123</code>であり、<code>0123</code>ではありません。これは、明確さが重要な製品コード、シリアル番号、または短いリンクに最適です。" },
        { "title": "コンパクトで効率的", "desc": "可能なすべての数字の文字列が有効な数値であるため、データを表現するための非常に高密度で効率的な方法です。無駄な組み合わせや無効な組み合わせはありません。" },
        { "title": "コンピューティングへの自然な適合", "desc": "数値と文字列の1対1（いちたいいち）のマッピングは、複雑なデータ構造のインデックス作成や分散システムでの一意のキーの生成など、一意の識別子を必要とするアルゴリズムに最適です。" },
        { "title": "ヌルフリーシステムとの類似性", "desc": "すべての文字列が有効な数値であるという概念は、ヌル参照を排除するという現代のプログラミングの目標と興味深い類似点を提供します。「空」または「ヌル」の表現がないため、すべての状態が有効であるシステムについて考える具体的な方法を提供し、より堅牢なソフトウェアを構築するための重要なアイデアです。" },
        { "title": "直感的な高範囲指計数", "desc": "バイナリ指計数では1023まで数えることができますが、抽象的になることがあります。単射基数6は、10を超えて数えるためのより直感的な方法を提供します。片手を1〜6の数字（例：6の場合は拳）に、もう片方の手を「繰り上がり」の追跡に使用することで、多くの人が視覚化し追跡しやすい方法で最大42までの数字を簡単に表現できます。" }
    ],
    "consTitle": "欠点とトレードオフ",
    "consIntro": "強力ではありますが、いくつかの重要な理由から、このシステムは一般的な算術には広く使用されていません。",
    "cons": [
        { "title": "不慣れな算術", "desc": "加算と減算での繰り上がりと借用のルールは10進法とは異なり、ほとんどの人にとって暗算や手計算が困難になります。" },
        { "title": "変換のオーバーヘッド", "desc": "これはコンピュータ（バイナリを使用）や人間（10進法を使用）にとってネイティブなシステムではありません。他のシステムと連携する際には常に変換ステップが必要であり、計算上のオーバーヘッドが追加されます。" },
        { "title": "限定的なネイティブサポート", "desc": "単射記数法のための組み込み関数を持つプログラミング言語や標準ライブラリはほとんどありません。これは、開発者がすべての算術および変換操作のためにカスタムロジックを実装する必要があることを意味します。" },
        { "title": "複雑な乗算パターン", "desc": "基数で乗算すると単にゼロが追加される標準基数とは異なり、単射乗算のパターンは直感的ではなく、迅速な見積もりや計算が困難になります。" }
    ],
    "practiceTitle": "練習モード",
    "practiceDesc": "時間と競争してスキルをテストしましょう！難易度を選択して問題を解いてください。",
    "difficultyLabel": "難易度：",
    "difficultyEasy": "簡単",
    "difficultyMedium": "普通",
    "difficultyHard": "難しい",
    "quizQuestion": "これは何ですか",
    "quizTypeConversion": "変換",
    "quizTypeMath": "計算",
    "quizQuestionConversionSuffix": "を単射基数6で？",
    "quizAnswerPlaceholder": "あなたの答え...",
    "quizSubmitBtn": "送信",
    "quizCorrectFeedback": "正解！🎉",
    "quizIncorrectFeedback": "残念！正解は",
    "quizNextBtn": "次の問題",
    "timeLabel": "時間：",
    "githubLink": "プロジェクトのソースコードは以下で入手可能です",
    "licenseLink": "以下のライセンスでリリースされています",
    "ui_loading": "読み込み中...",
    "errorBothNumbers": "両方の数値を入力してください。",
    "errorGeneric": "エラー："
}